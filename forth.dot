EMIT -> {EXECUTE FETCH STOP PLUSSTORE}
CR -> {EXECUTE STOP FETCH}
CL -> {STOP FETCH}
FIRST -> {STOP FETCH}
BBUF -> {STOP FETCH}
BSCR -> {STOP FETCH}
HERE -> {STOP FETCH}
ALLOT -> {STOP PLUSSTORE}
COMMA -> {HERE ALLOT STORE STOP}
EQUALS -> {MINUS 0EQUALS STOP}
ULESS -> {0BRANCH MINUS 2DUP BRANCH STOP DROP 0LESS 0EQUALS XOR}
SPACE -> {EMIT STOP}
QUERYDUP -> {0BRANCH DUP STOP}
LATEST -> {STOP FETCH}
QERROR -> {0BRANCH ERROR STOP DROP SWAP BRANCH}
QCOMP -> {QERROR FETCH LIT STOP 0EQUALS}
COMPILE -> {2PLUS FETCH QCOMP MOVER DUP STOP COMMA RMOVE}
LEFTBRKT -> {STOP STORE}
COUNT -> {1PLUS DUP STOP SWAP CFETCH}
TYPE -> {LDO 0BRANCH EMIT BRANCH PLUS QUERYDUP LLOOP STOP DROP I CFETCH SWAP OVER}
TRAILING -> {LDO LEAVE 0BRANCH MINUS BRANCH PLUS LLOOP DUP STOP 1MINUS CFETCH OVER}
CQUOTE -> {1PLUS PLUS MOVER TYPE DUP COUNT STOP RMOVE}
EXPECT -> {LIT KEY 1PLUS 0BRANCH EMIT LLOOP EQUALS STORE STOP I BRANCH OVER LDO FETCH MINUS MOVER DUP LEAVE RMOVE PLUS CSTORE DROP}
QUERY -> {FETCH EXPECT LIT STORE STOP}
BLANKS -> {STOP FILL}
HOLD -> {FETCH LIT CSTORE PLUSSTORE STOP}
PAD -> {HERE LIT STOP PLUS}
WORD -> {HERE LIT PLUSSTORE 1PLUS 0BRANCH STOP OVER BRANCH FETCH ENCLOSE MINUS MOVER RMOVE SWAP BLOCK CMOVE BLANKS PLUS CSTORE}
CONVERT -> {ROT PLUSSTORE 1PLUS 0BRANCH STOP BRANCH FETCH USTAR MOVER DUP RMOVE SWAP DPLUS DROP DIGIT CFETCH}
NUMBER -> {CONVERT ROT LIT 1PLUS 0BRANCH DNEGATE EQUALS STORE STOP BRANCH MINUS MOVER DUP RMOVE QERROR PLUS DROP CFETCH}
MFIND -> {HERE FETCH 0BRANCH LATEST DUP STOP FIND DROP 0EQUALS WORD}
CABORT -> {ABORT STOP}
ERROR -> {QUIT CABORT HERE FETCH CQUOTE 0BRANCH TYPE QUERYDUP COUNT MESSAGE SPSTORE 0LESS SWAP}
LITERAL -> {FETCH 0BRANCH LIT STOP COMPILE COMMA}
DLITERAL -> {FETCH 0BRANCH STOP LITERAL SWAP}
QSTACK -> {HERE QERROR FETCH ULESS PLUS LIT STOP SWAP SPFETCH}
INTERPRET -> {1PLUS LESSTHAN HERE EXECUTE FETCH NUMBER DLITERAL 0BRANCH MFIND DROP COMMA QSTACK LITERAL BRANCH}
QUIT -> {LEFTBRKT QUERY FETCH CQUOTE 0BRANCH CR INTERPRET STORE RPSTORE 0EQUALS BRANCH}
ABORT -> {STOP EXECUTE FETCH}
WARM -> {ABORT CMOVE LIT}
COLD -> {ABORT CMOVE LIT STORE}
PLUSMINUS -> {0BRANCH 0LESS NEGATE STOP}
DPLUSMINUS -> {DNEGATE 0BRANCH 0LESS STOP}
ABS -> {PLUSMINUS DUP STOP}
DABS -> {DUP DPLUSMINUS STOP}
MAX -> {LESSTHAN 0BRANCH 2DUP STOP DROP SWAP}
MTIMES -> {ABS USTAR 2DUP DPLUSMINUS MOVER STOP RMOVE SWAP XOR}
MDIV -> {PLUSMINUS ABS XOR MOVER UMOD STOP RMOVE SWAP DABS OVER}
TIMES -> {MTIMES STOP DROP}
DIVMOD -> {MDIV SINGTODUB MOVER STOP RMOVE}
DIV -> {DIVMOD SWAP DROP STOP}
MOD -> {DIVMOD STOP DROP}
TIMESDIVMOD -> {MDIV MOVER STOP MTIMES RMOVE}
MDIVMOD -> {MOVER UMOD STOP RMOVE SWAP}
CLINE -> {BBUF CL PLUS MOVER BSCR TIMESDIVMOD STOP RMOVE BLOCK TIMES}
DOTLINE -> {STOP TRAILING CLINE TYPE}
MESSAGE -> {FETCH DIV CQUOTE 0BRANCH MINUS BRANCH QUERYDUP DOT BSCR LIT SPACE STOP DOTLINE}
BLOCK -> {FETCH BBUF FIRST PLUS LIT STOP MOD TIMES}
SPACES -> {LDO 0BRANCH QUERYDUP LLOOP SPACE STOP MAX}
LESSHARP -> {STORE STOP PAD}
SHARPGT -> {FETCH PAD MINUS STOP DROP OVER}
SIGN -> {0BRANCH ROT HOLD LIT STOP 0LESS}
SHARP -> {MDIVMOD LESSTHAN FETCH ROT 0BRANCH PLUS HOLD LIT STOP OVER}
SHARPS -> {SHARP 0BRANCH STOP OR 0EQUALS OVER}
DDOTR -> {SIGN SHARPGT SHARPS MINUS SPACES TYPE MOVER LESSHARP STOP RMOVE SWAP DABS OVER}
DDOT -> {DDOTR SPACE STOP}
DOT -> {SINGTODUB DDOT STOP}
